name: 'CD'

on:
  push:
    branches: [ main ]

jobs:
  cd:
    runs-on: [ ubuntu-latest ]
    steps:
      - name: 깃헙 코드를 VM으로 복사
        uses: actions/checkout@v4

      - name: 깃헙 액션의 VM에 자바 설치중 ...
        uses: actions/setup-java@v4
        with:
          distribution: 'adopt'
          java-version: '17'

      # 여기서 복사 시킬떄 compose.yml파일이랑 env파일을 둘이 같은 위치에 두게한다음에  해야할듯
      - name: ENV 복사
        run: |
          echo "${{ secrets.ENV }}" > .env
        shell: bash

      - name: 빌드 및 테스트 코드 돌리는중 ...
        run: |
          chmod +x ./gradlew
          ./gradlew build -x test

      - name: 도커 이미지 빌드 및 푸시
        run: |
          docker login -u ${{secrets.DOCKER_ID}} -p ${{secrets.DOCKER_TOKEN}}
          docker build -t ${{secrets.DOCKER_ID}}/${{secrets.DOCKER_REPO}} .
          docker push ${{secrets.DOCKER_ID}}/${{secrets.DOCKER_REPO}}

      - name: ec2에 docker-compose.yml 파일 복사시키기 (env와 동일한 위치)
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{secrets.AWS_IP}}
          key: ${{secrets.AWS_KEY}}
          username: ubuntu
          source: ./docker-compose.yml
          target: ~/

      - name: ec2에 env 파일 복사시키기 (docker-compose.yml과 동일한 위치)
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{secrets.AWS_IP}}
          key: ${{secrets.AWS_KEY}}
          username: ubuntu
          source: .env
          target: ~/

      - name: Aws 내부에서 docker-compose 실행시키기
        uses: appleboy/ssh-action@master
        with:
          host: ${{secrets.AWS_IP}}
          key: ${{secrets.AWS_KEY}}
          username: ubuntu
          script: |            
            cd ~/
            sudo docker-compose down
            sudo docker-compose pull 
            sudo docker-compose up -d
            sudo docker image prune -f          


